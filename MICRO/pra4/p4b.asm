;*******************************************************************************
; PRACTICA 4 APARTADO B DE SISTEMAS BASADOS EN MICROPROCESADORES
; AUTORES: ALVARO SANCHEZ Y NICOLAS SERRANO
; PAREJA 10
;*******************************************************************************

; DEFINICION DEL SEGMENTO DE DATOS

DATOS SEGMENT

  CLR_PANT 	DB 	1BH,"[2","J$"
  NUM_P DB 31H
  FIRST_LET DB 65 ;LETRA A(ASCII)
  LAST_LET DB 91 ;LETRA Z+1(ASCII)
  INI_NUM DB 48 ;NUMERO 0(ASCII)
  FIRST_NUM DB 49 ;NUMERO 1(ASCII)
  LAST_NUM DB 58 ;NUMERO 9+1(ASCII)
  PRUEBA 	DB "ABCD  GHIJ KRS TUVW XYZ01236789 $"
  PRUEBA2 	DB "21222324 2630313233343536$"


DATOS ENDS


; DEFINICION DEL SEGMENTO DE PILA

PILA SEGMENT STACK "STACK"
  DB   40H DUP (0)
PILA ENDS


; DEFINICION DEL SEGMENTO EXTRA

EXTRA SEGMENT
EXTRA ENDS


; DEFINICION DEL SEGMENTO DE CODIGO

CODE SEGMENT
  ASSUME CS:CODE, DS:DATOS, ES: EXTRA, SS:PILA

; COMIENZO DEL PROCEDIMIENTO PRINCIPAL

START PROC
    ;INICIALIZA LOS REGISTROS DE SEGMENTO CON SUS VALORES
  MOV AX, DATOS
  MOV DS, AX

  MOV AX, PILA
  MOV SS, AX

  MOV AX, EXTRA
  MOV ES, AX

  ;FIN DE LAS INICIALIZACIONES

  ;COMIENZO DEL PROGRAMA
	MOV AH,9	; BORRA LA PANTALLA
	MOV DX, OFFSET CLR_PANT
	INT 21H

  MOV CH, 0 ;CONTADOR DE LINEAS
  MOV AL, 31H
  MOV BL, FIRST_NUM ;AL SER LA PAREJA 10, LA PRIMERA POSICION LA OCUPA EL NUMERO 1
                  ;CUYO ASCII = 49

PRIMERA_LINEA:  ;BUCLE PARA IMPRIMIR LA SEGUNDA LINEA
  MOV AH,2H	; IMPRIMIMOS UNO DE LOS NUMEROS DE LA PARTE SUPERIOR
  MOV DL, 9 ;ESCRIBE UN TABULACION
  INT 21H
  MOV DL, AL ;ESCRIBE AL
  INT 21H
  CMP AL, 36H
  JE NUEVA_LINEA
  INC AL
  JMP PRIMERA_LINEA

NUEVA_LINEA:
  INC CH
  CMP CH, 7
  JE FIN
  MOV CL, 0
  MOV DL, 10 ;ESCRIBE UN SALTO DE LINEA
  INT 21H
  MOV DL, NUM_P ; IMPRIMIMOS UNO DE LOS NUMEROS DE LA PARTE LATERAL
  INT 21H
  INC NUM_P
NUEVO_NUMERO:
  MOV DL, 9 ;ESCRIBE UN TABULACION
  INT 21H
  MOV DL, BL ; IMPRIMIMOS UN CARACTER DE DENTRO DE LA TABLA
  INT 21H
  INC BL
  CMP BL, LAST_LET
  JNE CONT_NUM
  MOV BL, INI_NUM

CONT_NUM:
  CMP CL, 5
  JE NUEVA_LINEA
  INC CL
  CMP BL, LAST_NUM
  JNE NUEVO_NUMERO
  MOV BL, FIRST_LET
  JMP NUEVO_NUMERO

  FIN:  ; FIN DEL PROGRAMA
  CALL CODIFICADOR
  CALL DECODIFICADOR
    MOV AX, 4C00H
    INT 21H

CODIFICADOR PROC NEAR
    ;;inicio prueba
    XOR SI,SI
    MOV AH,2H
    MOV DL, 10 ;ESCRIBE UN SALTO DE LINEA
    INT 21H
  BUCLE:
  	MOV AL, [PRUEBA][SI]
  	CMP AL, 36 ;SI DETECTAMOS UN $ ACABAMOS
  	JE FIN_COD
  	CMP AL, 48 ;SI ES MAS PEQUEÃ‘O QUE EL 0 ES UN CARACTER NO PERMITIDO
  	JB INCREMENTO
  	CMP AL, 90
  	JA INCREMENTO ;SI ES MAS GRANDE QUE LA Z ES UN CARACTER NO PERMITIDO
  	CMP AL, 32
  	JE ESPACIO
  	CMP AL, 48 ;SI ES CERO IMPRIME 66
  	JNE NUM_Y_LET
    MOV AH,2H
  	MOV DL, 54 ;IMPRIME UN 6
  	INT 21H
  	MOV DL, 54 ;IMPRIME UN 6
  	INT 21H
  	JMP ESPACIO

  NUM_Y_LET:
  	CMP AL, 57 ;ES UN NUMERO
  	JBE IMP_NUM
  	CMP AL, 65 ;ES UNA LETRA
  	JAE IMP_LET
  	JMP INCREMENTO

  IMP_NUM:
  	SUB AL, 48
  	XOR AH, AH
  	MOV BL, 6
  	DIV BL
  	ADD AL, 49
    CMP AH, 0
    JNE IMP_NUM_CONT
    MOV AH, 6
    DEC AL
  IMP_NUM_CONT:
  	ADD AH, 48
    MOV BL, AH
    MOV AH,2H
  	MOV DL, AL ;IMPRIME LA FILA
  	INT 21H
  	MOV DL, BL ;IMPRIME LA COLUMNA
  	INT 21H
  	JMP ESPACIO

  IMP_LET:
  	SUB AL, 65
  	XOR AH, AH
  	ADD AX, 10
  	MOV BL, 6
  	DIV BL
  	ADD AL, 49
    CMP AH, 0
    JNE IMP_LET_CONT
    MOV AH, 6
    DEC AL
  IMP_LET_CONT:
  	ADD AH, 48
    MOV BL, AH
    MOV AH,2H
  	MOV DL, AL ;IMPRIME LA FILA
  	INT 21H
  	MOV DL, BL ;IMPRIME LA COLUMNA
  	INT 21H
  	JMP ESPACIO

  ESPACIO:
    MOV AH,2H	; IMPRIMIMOS UNO DE LOS NUMEROS DE LA PARTE SUPERIOR
  	MOV DL, 32 ;IMPRIME UN ESPACIO
  	INT 21H

  INCREMENTO:
  	INC SI
  	JMP BUCLE

    FIN_COD:
    	RET

    CODIFICADOR ENDP

    ;FUNCION QUE DECODIFICA EL CODIGO DE ASCII A POLIBIO
    DECODIFICADOR PROC NEAR

    XOR SI,SI
    MOV AH,2H
    MOV DL, 10 ;ESCRIBE UN SALTO DE LINEA
    INT 21H

    BUCLE_D:
    	MOV AX, WORD PTR [PRUEBA2][SI]
    	CMP AH, 36 ;SI DETECTAMOS UN $ ACABAMOS
    	JE FIN_COD_D
    	CMP AL, 32
    	JNE VALIDO
    	INC SI
    	JMP BUCLE_D

    VALIDO: ;COMPRUEBA QUE SE NOS HA DADO UNA FILA Y COLUMNA VALIDA
    	CMP AL, 49
    	JB INCREMENTO_D
    	CMP AL, 54
    	JA INCREMENTO_D
    	CMP AH, 49
    	JB INCREMENTO_D
    	CMP AH, 54
    	JA INCREMENTO_D

    	;IMPRIMIMOS EL CASO ESPECIAL DEL CERO
    	CMP AL, 54
    	JNE COMPRUEBA
    	CMP AH, 54
    	JNE COMPRUEBA
    	MOV DL, 48 ;IMPRIME UN CERO
    	INT 21H

    COMPRUEBA: ;COMPRUEBA SI ES UN NUMERO O UNA LETRA
    	CMP AL, 50
    	JE LINEA2
    	JB IMP_NUM_D
    	JMP IMP_LET_D

    LINEA2: ;SI ESTA EN LA LINEA 2 SALTARA AQUI Y COMPROBARA SI ES NUMERO O LETRA
    	CMP AH, 52
    	JB IMP_NUM_D
    	JMP IMP_LET_D

    IMP_NUM_D:
      MOV DL, 6
      SUB AL, 49
      SUB AH, 48
      MOV CL, AH
      XOR AH, AH
      MUL DL
      ADD AL, CL
      ADD AL, 48
      MOV AH,2H
      MOV DL, AL ;IMPRIME EL NUMERO
      INT 21H
      JMP INCREMENTO_D

    IMP_LET_D:
      MOV DL, 6
      SUB AL, 49
      SUB AH, 48
      MOV CL, AH
      XOR AH, AH
      MUL DL
      ADD AL, CL
      ADD AL, 55
      MOV AH,2H
      MOV DL, AL ;IMPRIME LA LETRA
      INT 21H

    INCREMENTO_D:
    	ADD SI, 2
    	JMP BUCLE_D

    FIN_COD_D:
    	RET

    DECODIFICADOR ENDP
  ;;fin prueba



START ENDP
; FIN DEL SEGMENTO DE CODIGO
CODE ENDS
; FIN DEL PROGRAMA INDICANDO DONDE COMIENZA LA EJECUCION
END START
