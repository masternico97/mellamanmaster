;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE DATOS
DATOS SEGMENT
	CLR_PANT 	DB 	1BH,"[2","J$"
	PREG_MODE 	DB 	1BH,"[10;1fElige el modo de empleo del programa $"
	OPC_1		DB	1BH,"[11;1f1)Calcular el determinante con valores por defecto $"
	OPC_2		DB	1BH,"[12;1f2)Calcular el determinante con valores introducidos por teclado $  "
	ESCOGIDO	DB 	3 DUP (0)
	TEXTO_OPC_2	DB	1BH,"[13;1f2)Introduce los nueve numeros del 0 al 255 separados por espacios $  "
	MATRIZ		DB	3, 47, 130, 201, 93, 47, 193, 161, 212
	MATRIZ_LEC	DB	40 DUP(0)
	SOLUCION	DB	4 DUP (0)
	
	

DATOS ENDS
;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE PILA
PILA SEGMENT STACK "STACK"
	DB 40H DUP (0)
PILA ENDS
;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE CODIGO
CODE SEGMENT
ASSUME CS:CODE,DS:DATOS,SS:PILA
; COMIENZO DEL PROCEDIMIENTO PRINCIPAL (START)
START PROC FAR
    ;INICIALIZA LOS REGISTROS DE SEGMENTO CON SUS VALORES 
    MOV AX, DATOS 
    MOV DS, AX 

    MOV AX, PILA 
    MOV SS, AX 

    ; CARGA EL PUNTERO DE PILA CON EL VALOR MAS ALTO 
    MOV SP, 64 

    ; FIN DE LAS INICIALIZACIONES 
	
	;COMIENZO DEL PROGRAMA 
	MOV AH,9	; BORRA LA PANTALLA
	MOV DX, OFFSET CLR_PANT
	INT 21H
	
	MOV DX, OFFSET PREG_MODE ;ESCRIBE "Elige ...
	INT 21H
	
	MOV DX, OFFSET OPC_1 ;ESCRIBE "1)Calcular ...
	INT 21H
	
	MOV DX, OFFSET OPC_2 ;ESCRIBE "2)Calcular ...
	INT 21H
	
	MOV AH,0AH			;ALMACENA LA OPCION
	MOV DX, OFFSET ESCOGIDO
	
	MOV ESCOGIDO[0], 2		;MAXIMO NUMERO DE CARACTERES
	INT 21H
	
	MOV AH, 00H	;CONVIERTE EL NUMERO LEIDO EN ASCII EN INT
	MOV AL, ESCOGIDO[2]
	SUB AL, 48
	
	CMP AX, 1 ;SI SE HA ESCOGIDO 1 SALTA A LA RUTINA OPCION1
	JE OPCION1
	
	CMP AX, 2 ;SI SE HA ESCOGIDO 2 SALTA A LA RUTINA OPCION2
	JE OPCION2
	
FIN: 
    ; FIN DEL PROGRAMA 
    MOV AX, 4C00H 
    INT 21H 

OPCION1:
	MOV AH,9
	CALL CALCULAR_MATRIZ
	JMP FIN
	
OPCION2:
	MOV AH,9
	MOV DX, OFFSET TEXTO_OPC_2	;MUESTRA "Introduce...
	INT 21H	
	
	MOV AH,0AH	;ALMACENA LOS NUMEROS EN ASCII
	MOV DX, OFFSET MATRIZ_LEC
	
	
	CALL CALCULAR_MATRIZ
	JMP FIN
	

	
START ENDP
; COMIENZO DEL PROCEDIMIENTO (CALCULAR_MATRIZ)
CALCULAR_MATRIZ PROC	;SE CALCULA MEDIANTE LA REGLA DE LAPLACE
	MOV BX, 3	;FILA 2
	MOV SI, 1	;COLUMNA 2
	MOV AL, MATRIZ[BX][SI]	;GUARDAMOS DATO FILA 2 COLUMNA 2
	
	MOV BX, 6	;FILA 3
	MOV SI, 2	;COLUMNA 3
	IMUL MATRIZ[BX][SI]	;MULTIPLICAMOS CON SIGNO EL DATO DE FILA 2 COLUMNA 2 POR AH
	PUSH AX
	
	MOV	SI, 1	;COLUMNA 2
	MOV AL, MATRIZ[BX][SI]	;GUARDAMOS DATO FILA 3 COLUMNA 2 EN AH
	
	MOV BX, 3	;FILA 2
	MOV SI, 2	;COLUMNA 3
	IMUL MATRIZ[BX][SI]	;MULTIPLICAMOS CON SIGNO EL DATO DE FILA 2 COLUMNA 3 POR AH
	
	POP DX
	SUB DX, AX
	
	MOV BX, 0	;FILA 1
	MOV SI, 0	;COLUMNA 1
	MOV AH, MATRIZ[BX][SI]
	MOV CL, 08h
	SAR AX, CL
	
	IMUL DX	;CALCULAMOS EL PRIMER TERMINO DE LAPLACE
	
	PUSH DX	;GUARDAMOS LA PARTE ALTA DEL NUMERO
	PUSH AX	;GUARDAMOS LA PARTE BAJA DEL NUMERO
	
	
	MOV BX, 3	;FILA 2
	MOV SI, 0	;COLUMNA 1
	MOV AL, MATRIZ[BX][SI]	;GUARDAMOS DATO FILA 2 COLUMNA 1
	
	MOV BX, 6	;FILA 3
	MOV SI, 2	;COLUMNA 3
	IMUL MATRIZ[BX][SI]	;MULTIPLICAMOS CON SIGNO EL DATO DE FILA 2 COLUMNA 2 POR AH
	PUSH AX
	
	MOV	SI, 0	;COLUMNA 1
	MOV AL, MATRIZ[BX][SI]	;GUARDAMOS DATO FILA 3 COLUMNA 1 EN AH
	
	MOV BX, 3	;FILA 2
	MOV SI, 2	;COLUMNA 3
	IMUL MATRIZ[BX][SI]	;MULTIPLICAMOS CON SIGNO EL DATO DE FILA 2 COLUMNA 3 POR AH
	
	POP DX
	SUB DX, AX
	
	MOV BX, 0	;FILA 1
	MOV SI, 1	;COLUMNA 2
	MOV AH, MATRIZ[BX][SI]
	MOV CL, 08h
	SAR AX, CL 
	
	IMUL DX	;CALCULAMOS EL SEGUNDO TERMINO DE LAPLACE
	
	PUSH DX	;GUARDAMOS LA PARTE ALTA DEL NUMERO
	PUSH AX	;GUARDAMOS LA PARTE BAJA DEL NUMERO
	
	
	MOV BX, 3	;FILA 2
	MOV SI, 0	;COLUMNA 1
	MOV AL, MATRIZ[BX][SI]	;GUARDAMOS DATO FILA 2 COLUMNA 1
	
	MOV BX, 6	;FILA 3
	MOV SI, 1	;COLUMNA 2
	IMUL MATRIZ[BX][SI]	;MULTIPLICAMOS CON SIGNO EL DATO DE FILA 3 COLUMNA 2 POR AH
	PUSH AX
	
	MOV	SI, 0	;COLUMNA 1
	MOV AL, MATRIZ[BX][SI]	;GUARDAMOS DATO FILA 3 COLUMNA 1 EN AH
	
	MOV BX, 3	;FILA 2
	MOV SI, 1	;COLUMNA 2
	IMUL MATRIZ[BX][SI]	;MULTIPLICAMOS CON SIGNO EL DATO DE FILA 2 COLUMNA 2 POR AH
	
	POP DX
	SUB DX, AX
	
	MOV BX, 0	;FILA 1
	MOV SI, 2	;COLUMNA 3
	MOV AH, MATRIZ[BX][SI]
	MOV CL, 08h
	SAR AX, CL
	
	IMUL DX	;CALCULAMOS EL TERCER TERMINO DE LAPLACE
	
	
	POP CX	;PARTE BAJA DEL SEGUNDO TERMINO
	POP BX	;PARTE ALTA DEL SEGUNDO TERMINO
	SUB AX, CX	;RESTAMOS LA PARTE BAJA DEL SEGUNDO TERMINO AL TERCERO
	SBB DX, BX	;RESTAMOS LA PARTE PARTE ALTA DEL SEGUNDO TERMINO AL TERCERO + CF
	
	POP CX	;PARTE BAJA DEL PRIMER TERMINO
	POP BX	;PARTE ALTA DEL PRIMER TERMINO
	
	ADD CX, AX	;SUMAMOS LA PARTE BAJA DE SEGUNDO TERMINO + TERCER TERMINO AL PRIMER TERMINO
	ADC BX, DX	;SUMAMOS LA PARTE ALTA DE SEGUNDO TERMINO + TERCER TERMINO + CF AL PRIMER TERMINO
	
	MOV SOLUCION[0], BH	;PARTE ALTA DE LA PARTE ALTA
	MOV SOLUCION[1], BL	;PARTE BAJA DE LA PARTE ALTA
	MOV SOLUCION[2], CH	;PARTE ALTA DE LA PARTE BAJA
	MOV SOLUCION[3], CL	;PARTE BAJA DE LA PARTE BAJA
	
	RET
CALCULAR_MATRIZ ENDP

;FIN DEL SEGMENTO DE CODIGO
CODE ENDS
;FIN DE PROGRAMA INDICANDO DONDE COMIENZA LA EJECUCION
END START

